version: '3'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      # args: 
        # VARIANT: buster
        # DENO_VERSION: 1.33.4

    volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock 

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"  

    # Runs app on the same network as the service container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:mysql
    
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Uncomment the next line to use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined
    
  # You can include other services not opened by VS Code as well
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=my-secret-pw
      - MYSQL_DATABASE=employees
      - MYSQL_RANDOM_ROOT_PASSWORD=1
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ../sqls:/docker-entrypoint-initdb.d:ro

    # As in the "app" service, use "forwardPorts" in **devcontainer.json** to forward an app port locally.